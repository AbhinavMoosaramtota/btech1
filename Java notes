static keyword in main helps in running the program without object.
naming conventions: in camelScaleConvention the first letter of the first word is small.
PascalConvention has capital camelScaleConvention is used in functions for classes we use pascal scale convention.

primitive data type:int, float are few primitive data types.
non-primitive data type:they are derived form primitive data type

public static void main (String args[]) (it is the main function from where the java program execution starts) here 
public: This keyword means that the method is accessible anywhere, including from outside the class it's declared in. 
static: By using 'static', we're saying that the main method can be run without needing an instance of the class. 
void: This keyword indicates that the main method doesn't return any value.String args[]: 
The main() method also accepts some data from the user. It accepts a group of strings, which is called a string array.
It is used to hold the command line arguments in the form of string values. Here, agrs[] is the array name, 
and it is of String type.

Scanner sc=new Scanner(System.in): System.in helps in reading the value from the keyboard
when we are scanning we use sc.nextInt it is the method to read from the keyboard in this case it is an integer type.
if you want to use the scanner function then we need to use the header file import.java.util.scanner
if you want to scan a string then we use String name = sc.nextLine();.
Instead of string if we want ot scan a integer variable then we use nextInt

MATH CLASS:
if you want to find out the max or min element in the given comparision between two integers or if you want to find out the
Hypotenuse of a triangle the we use math class you can also use it to find out the sqrt of a given number.
Syntax: Math.sqrt();

Types of Operators:
Arithmetic Operator: +,-,*,/,%
Assignment Operator: =, +=
Comparision Operator: ==,>=,<=
Logical Operator: &&,||,!
Bitwise Operator: &
Arithemetic operators cannot work with booleans
Precedence tells us which symbol to execute first and Associativity tells us the directrion of execution if they have same 
precedence

Strings:
a string is a sequence of characters
String name;
name = new String ("abhi");
trimstring keyword is used to remove all the spaces present in the doublequotes

Arrays: 
Declaration: int[] marks
Memory allocation: marks= new int[5]
Declaration + Memory allocation: int []marks = new int[5];

WRAPPER CLASS:
provide a way to use primitive data types into reference data types.
ex: int is converted to integer, char is converted to character.
in the above example the int and char are primitive data types and the integer and character is wrapper class.
AUTOBOXING: it is an automatic way provided by java compiler makes between the primitive data type and wrapper class.
UNBOXING: the reverse of unboxing i.e from wrapper class to primitive data type.
primitive data types are faster than wrapper class.

Array List: 
stores a resizable array
Syntax:
ArrayList<String> food = new ArrayList<String>();
in the place of string always remember we need to give the reference data types not the primitive data types i.e we need
to use the wrapper class that is using instead of <int> in the angle brackets we need to use the wrapper class or 
reference data type i.e <Integer>.
while using arrays when we use the loop we use .length whereas when we are using arraylist we use .size.
The array is a fixed sized data structure thus, the array always needs to mention the size of the elements. 
On the other hand, ArrayList is not a fixed sized data structure, thus there is no need to mention the size of the 
ArrayList especially creating its object.

2D ARRAY LISTS:
you can change the size of these lists during runtime. they are list of lists.
Syntax:
ArrayList<ArrayList<String>> grocery = new ArrayList();

FOR EACH LOOP:
traversing technique to iterate through the elements in an array/collection.
less steps, less flexible, more readable.

METHODS:
a block of code that is executed whenever it is called upon.
overloaded methods: methods that share the same name but have different parameters.
method name + parameters = method signature.
they can share the same method name but need different parameters to give each one of them a unique method signature.

PRINTF:
an optional method to control, format, and display text to the console window
two arguments = format string + (object/variable/value)
% [flags] [precision] [width] [conversion-character].

Objects:
it is a blue print of class. Class is also an object
It is an instance of class where they contain attributes and methods.
Syntax: Classname obj name = new classname();

CONSTRUCTOR:
it is used to initialize the vatiables 
keyword: this.
constructors allow us to assign different attributes to each object that we instantiate
